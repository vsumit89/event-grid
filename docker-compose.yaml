version: '3.0'

services:
  db:
    image: postgres:14.2-alpine
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgresql:/var/lib/postgresql/data/
      - ./server/init-scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      interval: 10s
      retries: 10
      test: 'pg_isready -U "postgres" -d "eventgrid"'
      timeout: 2s
    networks:
      - eventgrid

  eventgrid-api:
    build:
      context: ./server
      dockerfile: ./docker/Dockerfile.dev
    depends_on:
      - db
      - rabbitmq
    ports:
      - "8080:8080"
    volumes:
      - ./server:/app
    networks:
      - eventgrid


  scheduler:
    build:
      context: ./server
      dockerfile: ./docker/Dockerfile.worker
    depends_on:
      - rabbitmq
    volumes:
      - ./server:/app
    networks:
      - eventgrid


  rabbitmq:
    image: "rabbitmq:3-management"
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmquser
      - RABBITMQ_DEFAULT_PASS=rabbitmqpassword
    volumes:
      - ./volumes/rabbitmq:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 15s
      retries: 5
    networks:
      - eventgrid


networks:
  eventgrid: